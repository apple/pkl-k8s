//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// MutatingAdmissionPolicyBinding binds the MutatingAdmissionPolicy with parametrized resources.
///
/// MutatingAdmissionPolicyBinding and the optional parameter resource together define how cluster administrators configure policies for clusters.
/// 
/// For a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.
/// Each evaluation is constrained by a [runtime cost budget](<https://kubernetes.io/docs/reference/using-api/cel/#runtime-cost-budget).>
/// 
/// Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.
@K8sVersion { introducedIn = "1.32" }
@ModuleInfo { minPklVersion = "0.25.0" }
open module k8s.api.admissionregistration.v1alpha1.MutatingAdmissionPolicyBinding

extends ".../K8sResource.pkl"

import ".../apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"
import ".../api/admissionregistration/v1alpha1/ParamRef.pkl"
import ".../api/admissionregistration/v1alpha1/MatchResources.pkl"

fixed apiVersion: "admissionregistration.k8s.io/v1alpha1"

fixed kind: "MutatingAdmissionPolicyBinding"

/// Standard object metadata; More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.>
metadata: ObjectMeta?

/// Specification of the desired behavior of the MutatingAdmissionPolicyBinding.
spec: MutatingAdmissionPolicyBindingSpec?

/// MutatingAdmissionPolicyBindingSpec is the specification of the MutatingAdmissionPolicyBinding.
class MutatingAdmissionPolicyBindingSpec {
  /// paramRef specifies the parameter resource used to configure the admission control policy.
  ///
  /// It should point to a resource of the type specified in spec.ParamKind of the bound MutatingAdmissionPolicy.
  /// If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the MutatingAdmissionPolicy applied.
  /// If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param.
  paramRef: ParamRef?

  /// policyName references a MutatingAdmissionPolicy name which the MutatingAdmissionPolicyBinding binds to.
  ///
  /// If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.
  policyName: String

  /// matchResources limits what resources match this binding and may be mutated by it.
  ///
  /// Note that if matchResources matches a resource, the resource must also match a policy's matchConstraints and matchConditions before the resource may be mutated.
  /// When matchResources is unset, it does not constrain resource matching, and only the policy's matchConstraints and matchConditions must match for the resource to be mutated.
  /// Additionally, matchResources.resourceRules are optional and do not constraint matching when unset.
  /// Note that this is differs from MutatingAdmissionPolicy matchConstraints, where resourceRules are required.
  /// The CREATE, UPDATE and CONNECT operations are allowed.
  /// The DELETE operation may not be matched.
  /// '*' matches CREATE, UPDATE and CONNECT.
  matchResources: MatchResources?
}

