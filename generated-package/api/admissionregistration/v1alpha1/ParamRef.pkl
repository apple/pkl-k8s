//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding.
@K8sVersion { introducedIn = "1.26" }
@ModuleInfo { minPklVersion = "0.25.0" }
module k8s.api.admissionregistration.v1alpha1.ParamRef

extends ".../K8sObject.pkl"

import ".../apimachinery/pkg/apis/meta/v1/LabelSelector.pkl"

/// `name` is the name of the resource being referenced.
///
/// 
/// `name` and `selector` are mutually exclusive properties.
/// If one is set, the other must be unset.
name: String?

/// namespace is the namespace of the referenced resource.
///
/// Allows limiting the search for params to a specific namespace.
/// Applies to both `name` and `selector` fields.
/// 
/// A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty.
/// 
/// - If `paramKind` is cluster-scoped, this field MUST be unset.
/// Setting this field results in a configuration error.
/// 
/// - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset.
/// Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error.
namespace: String?

/// selector can be used to match multiple param objects based on their labels.
///
/// Supply selector: {} to match all resources of the ParamKind.
/// 
/// If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together.
/// 
/// One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties.
/// If one is set, the other must be unset.
@K8sVersion { introducedIn = "1.28" }
selector: LabelSelector?

/// `parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding.
///
/// If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding.
/// If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy.
/// 
/// Allowed values are `Allow` or `Deny` Default to `Deny`
@K8sVersion { introducedIn = "1.28" }
parameterNotFoundAction: String?

