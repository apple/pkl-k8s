//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// PersistentVolume (PV) is a storage resource provisioned by an administrator.
///
/// It is analogous to a node.
/// More info: <https://kubernetes.io/docs/concepts/storage/persistent-volumes>
@ModuleInfo { minPklVersion = "0.25.0" }
open module k8s.api.core.v1.PersistentVolume

extends ".../K8sResource.pkl"

import ".../apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"
import ".../api/core/v1/PersistentVolumeSpec.pkl"

fixed apiVersion: "v1"

fixed kind: "PersistentVolume"

/// Standard object's metadata.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata>
metadata: ObjectMeta?

/// spec defines a specification of a persistent volume owned by the cluster.
///
/// Provisioned by an administrator.
/// More info: <https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes>
spec: PersistentVolumeSpec?

/// status represents the current information/status for the persistent volume.
///
/// Populated by the system.
/// Read-only.
/// More info: <https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes>
status: PersistentVolumeStatus?

/// PersistentVolumeStatus is the current status of a persistent volume.
class PersistentVolumeStatus {
  /// phase indicates if a volume is available, bound to a claim, or released by a claim.
  ///
  /// More info: <https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase>
  phase: String?

  /// reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
  reason: String?

  /// lastPhaseTransitionTime is the time the phase transitioned from one to another and automatically resets to current time everytime a volume phase transitions.
  @K8sVersion { introducedIn = "1.28" }
  lastPhaseTransitionTime: Time?

  /// message is a human-readable message indicating details about why the volume is in this state.
  message: String?
}

