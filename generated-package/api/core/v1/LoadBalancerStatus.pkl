//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// LoadBalancerStatus represents the status of a load-balancer.
@ModuleInfo { minPklVersion = "0.25.0" }
module k8s.api.core.v1.LoadBalancerStatus

extends ".../K8sObject.pkl"

/// Ingress is a list containing ingress points for the load-balancer.
///
/// Traffic intended for the service should be sent to these ingress points.
ingress: Listing<LoadBalancerIngress>?

/// LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.
class LoadBalancerIngress {
  /// IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.
  ///
  /// Setting this to "VIP" indicates that traffic is delivered to the node with the destination set to the load-balancer's IP and port.
  /// Setting this to "Proxy" indicates that traffic is delivered to the node or pod with the destination set to the node's IP and node port or the pod's IP and port.
  /// Service implementations may use this information to adjust traffic routing.
  @K8sVersion { introducedIn = "1.29" }
  ipMode: String?

  /// Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
  hostname: String?

  /// IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
  ip: String?

  /// Ports is a list of records of service ports If used, every port defined in the service should have an entry in it
  @K8sVersion { introducedIn = "1.20" }
  ports: Listing<PortStatus>?
}

/// PortStatus represents the error condition of a service port
class PortStatus {
  /// Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP"
  protocol: "UDP"|"TCP"|"SCTP"

  /// Port is the port number of the service port of which status is recorded here
  port: Int32

  /// Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
  ///
  ///   CamelCase names
  /// - cloud provider specific error values must have names that comply with the
  ///   format foo.example.com/CamelCase.
  error: String?
}

